syntax = "proto3";

package coop.drivers.dispatch.v1beta1;

import "coop/drivers/dispatch/v1beta1/latlng.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/kevinmichaelchen/api-dispatch/internal/idl/coop/drivers/dispatch/v1beta1";

service DispatchService {
  // Bulk-ingest driver locations.
  rpc UpdateDriverLocations(UpdateDriverLocationsRequest) returns (UpdateDriverLocationsResponse) {}

  // Bulk-ingest (on-demand or scheduled) trips.
  rpc CreateTrips(CreateTripsRequest) returns (CreateTripsResponse) {}

  // Gets the nearest drivers to a given trip pickup location.
  rpc GetNearestDrivers(GetNearestDriversRequest) returns (GetNearestDriversResponse) {}

  // Gets the nearest trips to a given driver's location.
  rpc GetNearestTrips(GetNearestTripsRequest) returns (GetNearestTripsResponse) {}
}

message DriverLocation {
  string driver_id = 1;
  google.protobuf.Timestamp most_recent_heartbeat = 2;
  LatLng current_location = 3;
}

message UpdateDriverLocationsRequest {
  repeated DriverLocation locations = 1;
}

message UpdateDriverLocationsResponse {}

message CreateTripsRequest {
  repeated Trip trips = 1;
}

message Trip {
  string id = 1;
  // where
  LatLng pickup_location = 2;
  // when
  google.protobuf.Timestamp scheduled_for = 3;
  // how much $$$
  double expected_payment = 4;
}

message CreateTripsResponse {}

message GetNearestDriversRequest {
  // trip pickup location
  LatLng pickup_location = 1;
  int32 limit = 2;
}

message GetNearestDriversResponse {
  repeated SearchResult results = 1;
  string pickup_address = 2;
}

message GetNearestTripsRequest {
  oneof driver {
    string driver_id = 1;
    LatLng driver_location = 2;
  }
  int32 limit = 3;
}

message GetNearestTripsResponse {
  repeated SearchResult results = 1;
}

message SearchResult {
  oneof payload {
    Trip trip = 1;
    DriverLocation driver = 2;
  }
  // Driver's distance from the pickup location (in meters)
  double distance_meters = 3;
  // Time it takes driver to go to pickup
  google.protobuf.Duration duration = 4;
  // The match's location.
  LatLng location = 5;
  // Human-readable location
  string address = 6;
  // The highest (finest) H3 resolution in which the match was found.
  int32 resolution = 7;
  // The k-value of the lowest k-ring (most immediate neighborhood) in which the
  // match was found.
  int32 k_value = 8;
}
